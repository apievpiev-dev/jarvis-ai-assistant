apiVersion: apps/v1
kind: Deployment
metadata:
  name: learning-service
  namespace: jarvis
  labels:
    app: learning-service
    app.kubernetes.io/name: jarvis
    app.kubernetes.io/instance: jarvis
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: learning-service
    app.kubernetes.io/part-of: jarvis-ai-assistant
    app.kubernetes.io/managed-by: kustomize
spec:
  replicas: 2
  selector:
    matchLabels:
      app: learning-service
  template:
    metadata:
      labels:
        app: learning-service
        app.kubernetes.io/name: jarvis
        app.kubernetes.io/instance: jarvis
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: learning-service
        app.kubernetes.io/part-of: jarvis-ai-assistant
        app.kubernetes.io/managed-by: kustomize
    spec:
      containers:
      - name: learning-service
        image: jarvis/learning-service:latest
        ports:
        - containerPort: 8007
          name: http
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: jarvis-secrets
              key: redis-url
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: jarvis-secrets
              key: postgres-url
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8007
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8007
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: knowledge-volume
          mountPath: /app/knowledge
        - name: models-volume
          mountPath: /app/models
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: knowledge-volume
        persistentVolumeClaim:
          claimName: knowledge-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: logs-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: learning-service
  namespace: jarvis
  labels:
    app: learning-service
    app.kubernetes.io/name: jarvis
    app.kubernetes.io/instance: jarvis
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: learning-service
    app.kubernetes.io/part-of: jarvis-ai-assistant
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    app: learning-service
  ports:
  - name: http
    port: 8007
    targetPort: 8007
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: learning-service-hpa
  namespace: jarvis
  labels:
    app: learning-service
    app.kubernetes.io/name: jarvis
    app.kubernetes.io/instance: jarvis
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: learning-service
    app.kubernetes.io/part-of: jarvis-ai-assistant
    app.kubernetes.io/managed-by: kustomize
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: learning-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80