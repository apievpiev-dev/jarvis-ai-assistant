#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Jarvis AI Assistant (—Ä–µ–∞–ª—å–Ω—ã–π IP)
–ê–≤—Ç–æ—Ä: Jarvis AI Assistant
–í–µ—Ä—Å–∏—è: 1.0.0
"""

import requests
import json
import time
import subprocess

def get_real_ip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ IP –∞–¥—Ä–µ—Å–∞"""
    try:
        result = subprocess.run(['hostname', '-I'], capture_output=True, text=True)
        if result.returncode == 0:
            ips = result.stdout.strip().split()
            return ips[0] if ips else "localhost"
    except:
        pass
    return "localhost"

def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API"""
    real_ip = get_real_ip()
    base_url = f"http://{real_ip}:8000"
    
    print("ü§ñ Jarvis AI Assistant - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è (–†–µ–∞–ª—å–Ω—ã–π IP)")
    print("=" * 60)
    print(f"üåê IP –∞–¥—Ä–µ—Å: {real_ip}")
    print(f"üîó URL: {base_url}")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        response = requests.get(f"{base_url}/health")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–µ—Ä–≤–∏—Å –∑–¥–æ—Ä–æ–≤: {data['service']} v{data['version']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞...")
    try:
        response = requests.get(f"{base_url}/status")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {data['status']}")
            print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: {data['active_connections']}")
            print(f"   –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {data['total_messages']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    test_messages = [
        "–ü—Ä–∏–≤–µ—Ç, Jarvis!",
        "–ö–∞–∫ –¥–µ–ª–∞?",
        "–ö–æ—Ç–æ—Ä—ã–π —á–∞—Å?",
        "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?",
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!"
    ]
    
    for i, message in enumerate(test_messages, 1):
        print(f"\n   –¢–µ—Å—Ç {i}: {message}")
        try:
            response = requests.post(
                f"{base_url}/message",
                json={"text": message, "user_id": "demo_user"}
            )
            if response.status_code == 200:
                data = response.json()
                print(f"   ‚úÖ –û—Ç–≤–µ—Ç: {data['data']['response']}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    try:
        response = requests.get(f"{base_url}/messages")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(data['messages'])} —Å–æ–æ–±—â–µ–Ω–∏–π")
            for msg in data['messages'][-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è
                print(f"   - {msg['text']} (–æ—Ç {msg['user_id']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://{real_ip}:8000")
    print(f"üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://{real_ip}:8000/docs")
    print(f"üîç Health Check: http://{real_ip}:8000/health")
    print("=" * 60)

if __name__ == "__main__":
    test_api()